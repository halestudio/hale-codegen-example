import to.wetransform.hale.codegen.generator.CLI

buildscript {
  repositories {
    maven {
      url 'https://repo.osgeo.org/repository/release/'
    }

    mavenCentral()

    // HALE artifacts
    maven {
      url 'https://artifactory.wetransform.to/artifactory/local'
    }
  }

  dependencies {
    classpath 'org.standardout:gradle-eclipseconfig:1.1.0'
    classpath 'to.wetransform.hale-codegen:generator:0.3.0-SNAPSHOT'
  }

  configurations.all {
    // ensure SNAPSHOTs are updated every time if needed
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
  }
}

apply plugin: 'java'
apply plugin: 'org.standardout.eclipseconfig'

sourceCompatibility = '1.8'

repositories {
  maven {
    url 'https://repo.osgeo.org/repository/release/'
  }

  mavenCentral()

  // HALE artifacts
  maven {
    url 'https://artifactory.wetransform.to/artifactory/local'
  }
}

configurations.all {
  // ensure SNAPSHOTs are updated every time if needed
  resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

project.ext {
  haleVersion = '5.0.1'
}

eclipseconfig {
  codeTemplates = rootProject.file('codetemplates.xml')
}

dependencies {
  implementation 'eu.esdihumboldt.unpuzzled:org.eclipse.equinox.nonosgi.registry:1.0.0'
  implementation 'to.wetransform.hale-codegen:model:0.3.0-SNAPSHOT'
  // for GeometryProperty
  implementation "eu.esdihumboldt.hale:eu.esdihumboldt.hale.common.schema:$haleVersion"

  testImplementation 'junit:junit:4.12'
  testImplementation 'to.wetransform.hale-codegen:instances:0.3.0-SNAPSHOT'
  testImplementation "eu.esdihumboldt.hale:eu.esdihumboldt.hale.io.xsd:$haleVersion"
  testImplementation "eu.esdihumboldt.hale:eu.esdihumboldt.hale.io.xml:$haleVersion"
  testImplementation "eu.esdihumboldt.hale:eu.esdihumboldt.hale.io.gml:$haleVersion"
}

task('regenerateSources').doFirst {
  File targetDir = project.file('src/main/java')
  targetDir.deleteDir();
  targetDir.mkdirs();

  URI schemaLocation = URI.create('https://repository.gdi-de.org/schemas/adv/nas/7.1/aaa.xsd')

  CLI.run(schemaLocation, targetDir)
}

tasks.compileJava.dependsOn('regenerateSources')

tasks.wrapper {
  distributionType = Wrapper.DistributionType.ALL
  gradleVersion = '8.3'
}

